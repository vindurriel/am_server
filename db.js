// Generated by CoffeeScript 1.4.0
var BSON, Db, Server, db, mongo, server, _collection,
  _this = this;

mongo = require('mongodb');

Server = mongo.Server;

Db = mongo.Db;

BSON = mongo.BSONPure;

server = new Server('localhost', 27017, {
  auto_reconnect: true
});

db = new Db('test', server);

module.exports.db = db;

db.open(function(err, db) {
  if (!err) {
    return console.log("Connected to database");
  }
});

_collection = function(name, fn) {
  return db.collection(name, fn);
};

module.exports.collection = _collection;

module.exports.insert = function(tname, obj, fn) {
  if (fn == null) {
    fn = function() {};
  }
  return _collection(tname, function(err, collection) {
    return collection.insert(obj, function(err, res) {});
  });
};

module.exports.upsert = function(tname, spec, obj, fn) {
  if (fn == null) {
    fn = function(err, res) {};
  }
  return _collection(tname, function(err, collection) {
    return collection.update(spec, obj, {
      upsert: true,
      multi: true,
      safe: false
    }, fn);
  });
};

module.exports.update = function(tname, spec, obj, option, fn) {
  if (option == null) {
    option = {};
  }
  if (fn == null) {
    fn = function(err, res) {};
  }
  return _collection(tname, function(err, collection) {
    return collection.update(spec, obj, option, fn);
  });
};

module.exports.list = function(tname, fn) {
  if (fn == null) {
    fn = function(err, res) {};
  }
  return _collection(tname, function(err, collection) {
    return collection.find().toArray(fn);
  });
};
